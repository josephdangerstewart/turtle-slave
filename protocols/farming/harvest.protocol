local utility = dofile("/protocols/farming/utility.lua")
local _, turtleUtility = ...

local data = utility.load()
turtleUtility:clearEquipped()

-- Make sure we've been initialized
if data == nil then
	return false, "Farming not initialized"
end

if turtleUtility:totalCountOf("minecraft:diamond_hoe") < 1 then
	return false, "No hoe"
end

-- Get the corners and make a rectangle
local rect = {
	topLeft = {
		x = data.northWestCorner.x,
		y = data.northWestCorner.y,
		z = data.northWestCorner.z,
	},
	width = data.southEastCorner.x - data.northWestCorner.x + 1,
	height = data.southEastCorner.z - data.northWestCorner.z + 1,
}

-- Go to the top left corner
turtleUtility:gotoPoint(rect.topLeft.x, rect.topLeft.y + 2, rect.topLeft.z)

turtleUtility:selectItem("minecraft:diamond_hoe")
turtle.equipRight()

turtleUtility:faceNorth()
turtle.turnRight()
turtle.turnRight()

for row = 1, rect.height do
	for col = 1, rect.width do
		local isOutline = row == 1 or col == 1 or row == rect.height or col == rect.width

		local normalCol = col
		if row % 2 == 0 then
			normalCol = (rect.width + 1) - col
		end

		if isOutline or normalCol % 3 ~= 0 then
			turtle.digDown()
		end
		turtle.forward()
	end

	local turnFunc = nil
	if row % 2 == 0 then
		turnFunc = turtle.turnRight
	else
		turnFunc = turtle.turnLeft
	end

	turnFunc()
	turtle.forward()
	turnFunc()
	turtle.forward()
end

turtleUtility:gotoPoint(data.chestCoords.x, data.chestCoords.y + 1, data.chestCoords.z)

local inventoryMap = {
	"minecraft:diamond_hoe",
	"minecraft:bucket",
	"minecraft:water_bucket"
}

for i,v in pairs(utility.seedTypes) do
	table.insert(inventoryMap, v)
end

turtleUtility:emptyInventory(inventoryMap)
